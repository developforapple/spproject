source 'https://github.com/cocoaPods/specs.git'
use_frameworks!
inhibit_all_warnings!
platform:ios, '9.0'

def tencent_cloud
    pod 'TACMessaging', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
    pod 'TACCrash', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
    pod 'TACStorage', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
    pod 'TACCore', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
    pod 'QCloudCore', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
    pod 'QCloudCOSXML', :source => 'https://git.code.tencent.com/qcloud_u/cocopoads-repo.git'
end

def common_pods
    pod 'ReactiveObjC'
    pod 'IAPHelper'       #https://github.com/saturngod/IAPHelper
    pod 'YYModel'         #https://github.com/ibireme/YYModel
    pod 'YYCategories'
    pod 'YYCache'
    pod 'MBProgressHUD'     #http://www.bukovinski.com
    pod 'DZNEmptyDataSet'   #https://github.com/dzenbot/DZNEmptyDataSet
    pod 'FMDB/standalone'              #https://github.com/ccgus/fmdb
    pod 'MJRefresh'                     #https://github.com/CoderMJLee/MJRefresh
    pod 'hpple', :git => 'https://github.com/topfunky/hpple.git'             #https://github.com/topfunky/hpple
    pod 'DGActivityIndicatorView'  #https://github.com/gontovnik/DGActivityIndicatorView
    pod 'PinYin4Objc'              #https://github.com/kimziv/PinYin4Obj
    pod 'JZNavigationExtension', '1.5.0.1' #https://github.com/JazysYu/JZNavigationExtension
    pod 'HBDNavigationBar', :git => 'git@github.com:listenzz/HBDNavigationBar.git'
    pod 'AMPopTip'          #https://github.com/andreamazz/AMPopTip
    pod 'SAMKeychain'
    pod 'DZNWebViewController'          #https://github.com/dzenbot/DZNWebViewController
    pod 'DACircularProgress'
    pod 'SVProgressHUD', :git => 'https://github.com/SVProgressHUD/SVProgressHUD.git'
    pod 'IQKeyboardManager'
    pod 'SDWebImage/GIF'
    pod 'SDWebImage/WebP'
    pod 'AFNetworking'
    pod 'SSZipArchive'
    pod 'AVOSCloud'
    pod 'Hero'

    pod 'IDMPhotoBrowser', :git => 'https://github.com/developforapple/IDMPhotoBrowser.git'
    pod 'JBChartView' , :git => 'https://github.com/developforapple/JBChartView.git'
    pod 'ChameleonFramework'
    pod 'MXParallaxHeader'
    pod 'FCUUID'
    pod 'CocoaLumberjack/Swift'
end

target 'SPAd' do
    common_pods
    tencent_cloud
    pod 'Google-Mobile-Ads-SDK'
end

target 'SPPro' do
    common_pods
    tencent_cloud
end

target 'SPOld' do
    common_pods
    tencent_cloud
    pod 'Google-Mobile-Ads-SDK'
end

target 'SPOldPro' do
    common_pods
    tencent_cloud
end

targetsArray = ['SPPro', 'SPAd', 'SPOld', 'SPOldPro']

def setup_target_macro(ttargets)
    puts "设置所有 Target 的预编译宏"
    _xcode_project_path = Dir.glob("*.xcodeproj").first
    app_project = Xcodeproj::Project.open(_xcode_project_path)

    app_project.native_targets.each do |target|
        if ttargets.include?(target.name)
            _MACRO_STR = 'TARGET_' + target.name + '=1'
            _SWIFT_FLAG = '-D TARGET_' + target.name

            puts "Target #{target.name}"
            puts "GCC_PREPROCESSOR_DEFINITIONS 添加 #{_MACRO_STR}"
            puts "OTHER_SWIFT_FLAGS 添加 #{_SWIFT_FLAG}"

            target.build_configurations.each do |config|
                
                _tempDefinitions = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'];
                _tempDefinitions |= [_MACRO_STR]

                config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = _tempDefinitions;
                config.build_settings['OTHER_SWIFT_FLAGS'] = "$(inherited) #{_SWIFT_FLAG}"

            end
        end
    end

    app_project.save
end

post_install do |installer|

    setup_target_macro targetsArray

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
#            config.build_settings['SWIFT_VERSION'] = '4.2'
            config.build_settings['VALID_ARCHS'] = 'armv7 arm64'
            config.build_settings['CLANG_WARN_DOCUMENTATION_COMMENTS'] = false
            config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '9.0'
            
            # 解决 AVOSCloud 中无法使用sqlite3.framework的问题
            if config.build_settings['PRODUCT_NAME'] == 'AVOSCloud'
                config.build_settings['FRAMEWORK_SEARCH_PATHS'] = "$(inherited) $PODS_CONFIGURATION_BUILD_DIR/sqlite3"
                config.build_settings['OTHER_CFLAGS'] = "$(inherited) -DFMDB_SQLITE_STANDALONE"
            end
        end
    end
end

# Tencent Cloud
# Document: https://cloud.tencent.com/document/product/666/14306
pre_install do |installer|
    puts "[TAC]-Running post installer"
    xcodeproj_file_name = "placeholder"
    Dir.foreach("./") do |file|
        if file.include?("xcodeproj")
            xcodeproj_file_name = file
        end
    end
    puts "[TAC]-project file is #{xcodeproj_file_name}"
    project = Xcodeproj::Project.open(xcodeproj_file_name)
    project.targets.each do |target|
        shell_script_after_build_phase_name = "[TAC] Run After Script"
        shell_script_before_build_phase_name = "[TAC] Run Before Script"
        puts "[TAC]-target.product_type is #{target.product_type}"
        if target.product_type.include?("application")
            should_insert_after_build_phases = 0
            should_insert_before_build_phases=0
            after_build_phase = nil
            before_build_phase = nil
            target.shell_script_build_phases.each do |bp|
                if !bp.name.nil? and bp.name.include?(shell_script_after_build_phase_name)
                    should_insert_after_build_phases = 1
                    after_build_phase = bp
                end
                if !bp.name.nil? and bp.name.include?(shell_script_before_build_phase_name)
                    should_insert_before_build_phases = 1
                    before_build_phase = bp
                end
            end


            if should_insert_after_build_phases == 1
                puts "[TAC]-Build phases with the same name--#{shell_script_after_build_phase_name} has already existed"
                else
                after_build_phase = target.new_shell_script_build_phase
                puts "[TAC]-installing run afger build phases-- #{after_build_phase}"

            end
            after_build_phase.name = shell_script_after_build_phase_name
            after_build_phase.shell_script = "
            if [ -f \"${SRCROOT}/Pods/TACCore/Scripts/tac.run.all.after.sh\" ]; then
                bash \"${SRCROOT}/Pods/TACCore/Scripts/tac.run.all.after.sh\"
                fi
                "
                after_build_phase.shell_path = '/bin/sh'
                if should_insert_before_build_phases == 1
                    puts "[TAC]-Build phases with the same name--#{shell_script_before_build_phase_name} has already existed"
                    else
                    before_build_phase = target.new_shell_script_build_phase
                    target.build_phases.insert(0,target.build_phases.pop)
                    puts "[TAC]-installing run before build phases-- #{before_build_phase}"

                end
                before_build_phase.name = shell_script_before_build_phase_name
                before_build_phase.shell_script = "
                if [ -f \"${SRCROOT}/Pods/TACCore/Scripts/tac.run.all.before.sh\" ]; then
                    bash \"${SRCROOT}/Pods/TACCore/Scripts/tac.run.all.before.sh\"
                    fi
                    "
                    before_build_phase.shell_path = '/bin/sh'
                end
            end
            puts "[TAC]-Saving projects"
            project.save()
        end
